#! /usr/bin/env python

import os, sys, re, glob
import xyzgeom, efield
import numpy as np
import subprocess as sp
from optparse import OptionParser

def ParseInput(ArgsIn):
   UseMsg = "python [script] [options] [outfile] [xyzfile]"
   parser = OptionParser(usage=UseMsg)
   parser.add_option('--bond_atoms', dest='bond_atoms', action='callback', type='string', callback=string_sp_callback, default=None, help='specify the two bond atoms')
   parser.add_option('--second_only', dest='second_only', action='store_true', default=False, help='only parse the efield produced by the second job')
   options, args = parser.parse_args(ArgsIn)
   if options.bond_atoms == None:
      print ("The two bond atoms must be specified")
      parser.print_help()
      sys.exit(0)
   if len(sys.argv) < 3:
      parser.print_help()
      sys.exit(0)

   return options, args

def string_sp_callback(option, opt, value, parser):
   setattr(parser.values, option.dest, value.split(','))

options, args = ParseInput(sys.argv)
outfile = args[1]
xyzfile = args[2]
bond_idx1, bond_idx2 = int(options.bond_atoms[0]), int(options.bond_atoms[1])

E_field = efield.calculate_efield_on_bond(outfile, xyzfile, bond_idx1, bond_idx2, options.second_only)
E_field_fromESP = efield.calculate_efield_from_esp(outfile, xyzfile, bond_idx1, bond_idx2)

print('E-field: %.3f; E-field(ESP): %.3f' %(E_field, E_field_fromESP))
